export class InteractiveChart extends HTMLElement {
    constructor() {
        super();
        const shadow = this.attachShadow({ mode: 'open' });

        // Create a div for Google Chart
        const chartDiv = document.createElement('div');
        chartDiv.id = 'chart';
        chartDiv.style.width = '600px';
        chartDiv.style.height = '400px';
        shadow.appendChild(chartDiv);

        this.drawChart = this.drawChart.bind(this);

        // Load Google Charts and fetch the data from API
        google.charts.load('current', { packages: ['corechart'] });
        google.charts.setOnLoadCallback(() => {
            this.fetchDataAndRenderChart();
        });
    }

    // Function to fetch data from the API and render the chart
    async fetchDataAndRenderChart() {
        try {
            // Fetch the case data from your API
            const response = await fetch('/api/my-cases');
            const casesData = await response.json();

            // Group data by caseTypeId
            const caseTypeCounts = this.groupByCaseType(casesData);

            // Prepare the data for Google Charts
            const chartData = [['Case Type', 'Count']];
            for (const [caseTypeId, count] of Object.entries(caseTypeCounts)) {
                chartData.push([caseTypeId, count]);
            }

            // Draw the chart with the processed data
            this.drawChart(chartData);
        } catch (error) {
            console.error('Error fetching case data:', error);
        }
    }

    // Helper function to group data by caseTypeId
    groupByCaseType(cases) {
        const caseTypeCounts = {};

        // Iterate over each case and count the occurrences of each caseTypeId
        cases.forEach((caseItem) => {
            const caseTypeId = caseItem.caseTypeId;
            if (caseTypeCounts[caseTypeId]) {
                caseTypeCounts[caseTypeId]++;
            } else {
                caseTypeCounts[caseTypeId] = 1;
            }
        });

        return caseTypeCounts;
    }

    // Draw the chart using Google Charts
    drawChart(chartData) {
        // Convert the data into Google Charts' format
        const data = google.visualization.arrayToDataTable(chartData);

        const options = {
            title: 'Cases by Case Type',
            chartArea: { width: '50%' },
            is3D: true, // Enable 3D effect
            hAxis: {
                title: 'Total Cases',
                minValue: 0,
            },
            vAxis: {
                title: 'Case Type',
            },
            tooltip: { isHtml: true }, // Enable HTML tooltips for interactivity
            animation: {
                startup: true, // Enable startup animation
                duration: 1000,
                easing: 'out',
            },
        };

        // Draw the bar chart
        const chart = new google.visualization.BarChart(this.shadowRoot.querySelector('#chart'));

        // Handle click event on bars
        google.visualization.events.addListener(chart, 'select', () => {
            const selectedItem = chart.getSelection()[0];
            if (selectedItem) {
                const caseType = data.getValue(selectedItem.row, 0);
                alert(`You clicked on case type: ${caseType}`);
            }
        });

        chart.draw(data, options);
    }
}

customElements.define('interactive-chart', InteractiveChart);
