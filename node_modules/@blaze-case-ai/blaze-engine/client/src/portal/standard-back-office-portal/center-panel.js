import "../../template/case-view-standard/index.js";
import "../../component/my-cases.js";
import "./dashboard.js";

class CenterPanelComponent extends HTMLElement {
  constructor() {
    super();
    this.attachShadow({ mode: "open" });
    this._renderTemplate();
  }

  _renderTemplate() {
    const tpl = document.createElement("template");
    tpl.innerHTML = `
      <style>
        :host { 
          display: flex; 
          flex-direction: column; 
          height: 100%; 
          width: 100%; 
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
          background: #ffffff; 
          color: #111827; 
        }
        
        .portal-center-panel { 
          display: flex; 
          flex-direction: column; 
          height: 100%; 
        }
        
        .image-section {
          padding: 1rem 1.5rem;
          border-bottom: 1px solid #e5e7eb;
          background: #f9fafb;
          display: none;
        }
        
        .content-image {
          max-width: 100%;
          height: auto;
          max-height: 200px;
          object-fit: contain;
          border-radius: 8px;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .tabs { 
          display: flex; 
          border-bottom: 1px solid #e5e7eb; 
          background: #ffffff; 
          padding: 0 1.5rem; 
          gap: 2rem;
          overflow-x: auto;
        }
        
        .tab { 
          padding: 1rem 0; 
          background: none; 
          border: none; 
          cursor: pointer; 
          font-size: 0.95rem; 
          font-weight: 500;
          color: #6b7280;
          border-bottom: 2px solid transparent;
          transition: all 0.2s ease;
          display: flex;
          align-items: center;
          gap: 0.5rem;
          white-space: nowrap;
        }
        
        .tab.active { 
          color: #2563eb; 
          border-bottom-color: #2563eb; 
          font-weight: 600; 
        }
        
        .tab:hover:not(.active) {
          color: #374151;
        }
        
        .tab-close { 
          margin-left: 0.5rem; 
          color: #9ca3af; 
          cursor: pointer; 
          font-size: 1.2rem;
          line-height: 1;
        }
        
        .tab-close:hover {
          color: #ef4444;
        }
        
        .content { 
          flex: 1; 
          overflow: auto; 
          padding: 1.5rem; 
        }
        
        .tasks-section {
          background: #ffffff;
        }
        
        .section-title {
          font-size: 1.25rem;
          font-weight: 600;
          color: #111827;
          margin-bottom: 1.5rem;
        }
        
        .tasks-table {
          width: 100%;
          border-collapse: collapse;
          background: #ffffff;
          border-radius: 8px;
          overflow: hidden;
          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .tasks-table th {
          background: #f9fafb;
          padding: 0.75rem 1rem;
          text-align: left;
          font-weight: 600;
          font-size: 0.75rem;
          color: #6b7280;
          text-transform: uppercase;
          letter-spacing: 0.05em;
          border-bottom: 1px solid #e5e7eb;
        }
        
        .tasks-table td {
          padding: 1rem;
          border-bottom: 1px solid #f3f4f6;
          font-size: 0.95rem;
        }
        
        .tasks-table tr:last-child td {
          border-bottom: none;
        }
        
        .case-id {
          font-weight: 600;
          color: #111827;
        }
        
        .case-title {
          color: #374151;
        }
        
        .status-badge {
          padding: 0.25rem 0.75rem;
          border-radius: 9999px;
          font-size: 0.75rem;
          font-weight: 500;
          text-transform: capitalize;
        }
        
        .status-progress {
          background: #fef3c7;
          color: #92400e;
        }
        
        .status-completed {
          background: #d1fae5;
          color: #065f46;
        }
        
        .status-new {
          background: #dbeafe;
          color: #1e40af;
        }
        
        .priority {
          font-weight: 500;
        }
        
        .priority-high {
          color: #dc2626;
        }
        
        .priority-medium {
          color: #d97706;
        }
        
        .priority-low {
          color: #059669;
        }
      </style>
      
      <div class="portal-center-panel">
        <div class="image-section" id="image-section">
          <img class="content-image" id="content-image" alt="Content Image" />
        </div>
        <div class="tabs" id="tabs"></div>
        <div class="content" id="content"></div>
      </div>
    `;
    this.shadowRoot.appendChild(tpl.content.cloneNode(true));
    this._initHomeTab();
  }

  connectedCallback() {
    window.addEventListener("show-dashboard", () => this._addTab("dashboard", "Dashboard", this._createDashboard()));
    window.addEventListener("case-type-selected", (e) =>
      this._addTab(e.detail.caseTypeId, e.detail.caseTypeId, this._createCaseList(e.detail.caseTypeId))
    );
    window.addEventListener("case-selected", (e) =>
      this._addTab(e.detail.caseId, e.detail.caseId, this._createCaseView(e.detail.caseId))
    );
  }

  // Method to add an image to the center panel
  addContentImage(imageSrc, altText = "Content Image") {
    const imageSection = this.shadowRoot.getElementById("image-section");
    const contentImage = this.shadowRoot.getElementById("content-image");

    contentImage.src = imageSrc;
    contentImage.alt = altText;
    imageSection.style.display = "block";
  }

  _initHomeTab() {
    const tabs = this.shadowRoot.getElementById("tabs");
    tabs.innerHTML = "";
    this._addTab("home", "Overview", this._createOverview());
  }

  _addTab(id, label, contentNode) {
    const tabs = this.shadowRoot.getElementById("tabs");
    const content = this.shadowRoot.getElementById("content");

    const btn = document.createElement("button");
    btn.className = "tab";
    btn.dataset.id = id;
    btn.textContent = label;

    const close = document.createElement("span");
    close.className = "tab-close";
    close.textContent = "Ã—";
    close.addEventListener("click", (e) => {
      e.stopPropagation();
      this._removeTab(id);
    });

    btn.appendChild(close);
    btn.addEventListener("click", () => this._activateTab(id));
    tabs.appendChild(btn);

    let pane = content.querySelector(`[data-id="${id}"]`);
    if (!pane) {
      pane = document.createElement("div");
      pane.className = "tab-content";
      pane.dataset.id = id;
      pane.appendChild(contentNode);
      content.appendChild(pane);
    }
    this._activateTab(id);
  }

  _activateTab(id) {
    this.shadowRoot.querySelectorAll(".tab").forEach((t) => t.classList.remove("active"));
    this.shadowRoot.querySelectorAll(".tab-content").forEach((c) => (c.style.display = "none"));

    const btn = this.shadowRoot.querySelector(`.tab[data-id="${id}"]`);
    const pane = this.shadowRoot.querySelector(`.tab-content[data-id="${id}"]`);

    if (btn && pane) {
      btn.classList.add("active");
      pane.style.display = "block";
    }
  }

  _removeTab(id) {
    const btn = this.shadowRoot.querySelector(`.tab[data-id="${id}"]`);
    const pane = this.shadowRoot.querySelector(`.tab-content[data-id="${id}"]`);

    if (btn) btn.remove();
    if (pane) pane.remove();
    
    // Switch to home tab if no tabs left
    if (this.shadowRoot.querySelectorAll(".tab").length === 0) {
      this._initHomeTab();
    } else {
      this._activateTab("home");
    }
  }

  _createOverview() {
    const container = document.createElement("div");
    container.className = "tasks-section";

    const title = document.createElement("h2");
    title.className = "section-title";
    title.textContent = "My Tasks";
    container.appendChild(title);

    const table = document.createElement("table");
    table.className = "tasks-table";

    const thead = document.createElement("thead");
    thead.innerHTML = `
      <tr>
        <th>CASE ID</th>
        <th>TITLE</th>
        <th>STATUS</th>
        <th>PRIORITY</th>
      </tr>
    `;
    table.appendChild(thead);

    const tbody = document.createElement("tbody");
    const sampleTasks = [
      { id: "CASE-001", title: "Contract Dispute Resolution", status: "In Progress", priority: "High" },
      { id: "CASE-002", title: "Insurance Claim Review", status: "Completed", priority: "Medium" },
      { id: "CASE-003", title: "Employment Verification", status: "New", priority: "Low" },
    ];

    sampleTasks.forEach((task) => {
      const row = document.createElement("tr");
      row.innerHTML = `
        <td class="case-id">${task.id}</td>
        <td class="case-title">${task.title}</td>
        <td>
          <span class="status-badge status-${task.status.toLowerCase().replace(" ", "")}">
            ${task.status}
          </span>
        </td>
        <td class="priority priority-${task.priority.toLowerCase()}">${task.priority}</td>
      `;
      tbody.appendChild(row);
    });

    table.appendChild(tbody);
    container.appendChild(table);

    return container;
  }

  _createCaseList(typeId) {
    const list = document.createElement("my-cases");
    list.setAttribute("case-type-id", typeId);
    return list;
  }

  _createCaseView(id) {
    const view = document.createElement("case-view-standard");
    view.setAttribute("case-id", id);
    return view;
  }

  _createDashboard() {
    return document.createElement("interactive-chart");
  }
}

if (!customElements.get("center-panel-component")) {
  customElements.define("center-panel-component", CenterPanelComponent);
}