const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const User = require('../model/user-model');

const APP_NAME = 'BlazeApp';
const SECRET = 'blaze-secret-key';

async function signup(email, password) {
  const existing = await User.findOne({ email, appName: APP_NAME });
  if (existing) throw new Error('User already exists');
  const passwordHash = await bcrypt.hash(password, 10);
  const user = new User({ email, passwordHash, appName: APP_NAME });
  await user.save();
  return user;
}

async function login(email, password) {
  const user = await User.findOne({ email, appName: APP_NAME });
  if (!user) throw new Error('User not found');
  const match = await bcrypt.compare(password, user.passwordHash);
  if (!match) throw new Error('Invalid credentials');
  const token = jwt.sign({ email, appName: APP_NAME }, SECRET, { expiresIn: '1d' });
  return token;
}

function verifyToken(token) {
  return jwt.verify(token, SECRET);
}

module.exports = { signup, login, verifyToken };