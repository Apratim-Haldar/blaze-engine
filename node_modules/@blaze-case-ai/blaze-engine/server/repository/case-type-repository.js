// node_modules/@blaze-case-ai/blaze-engine/server/repository/case-type-repository.js

const fs = require('fs/promises');
const path = require('path');
// const baseDir = path.join(__dirname, '../../core/case-type');
const baseDir = path.join(process.cwd(), 'core', 'case-type');

async function ensureCaseTypeDir() {
  await fs.mkdir(baseDir, { recursive: true });
}

async function listFiles() {
  await ensureCaseTypeDir();
  const names = await fs.readdir(baseDir);
  return names.filter(n => n.endsWith('.js'));
}

// "foo-bar" â†’ "Foo Bar"
function humanize(id) {
  return id
    .split(/[-_]/)
    .map(w => w[0].toUpperCase() + w.slice(1))
    .join(' ');
}

async function readCaseType(caseTypeId) {
  const filePath = path.join(baseDir, `${caseTypeId}.js`);
  delete require.cache[require.resolve(filePath)];
  const C = require(filePath);
  return C;
}

async function writeCaseTypeFile(caseTypeId, data) {
  const filePath = path.join(baseDir, `${caseTypeId}.js`);
  // Replace hyphens with underscores in the class name
  const className = caseTypeId
    .replace(/-/g, '_')  // Convert hyphens to underscores
    .split('_')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join('') + 'Case';

  console.log(`started writing case type file\nCase type id: ${caseTypeId}\nClass name: ${className}\n file path: ${filePath}\n`)
  const content = `
const BlazeCase = require("./base");

class ${className} extends BlazeCase {
  constructor() {
    super(
      "${caseTypeId}",
      "${data.caseType.label}",
      ${JSON.stringify(data.stages, null, 2)}
    );
  }
}

module.exports = ${className};
`;
  await fs.writeFile(filePath, content.trim());
}

async function deleteCaseTypeFile(caseTypeId) {
  const filePath = path.join(baseDir, `${caseTypeId}.js`);
  await fs.unlink(filePath);
}

module.exports = {
  ensureCaseTypeDir,
  listFiles,
  humanize,
  readCaseType,
  writeCaseTypeFile,
  deleteCaseTypeFile
};
