// node_modules/@blaze-case-ai/blaze-engine/server/controller/case-type-controller.js

const caseTypeService = require('@blaze-case-ai/blaze-engine/server/service/case-type-service');
const slugify = s =>
  s
    .toLowerCase()
    .trim()
    .replace(/\s+/g, '-')
    .replace(/[^\w-]/g, '');

// GET  /api/case-types
async function getCaseTypes(req, res) {
  try {
    const list = await caseTypeService.fetchCaseTypes();
    res.json(list);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
}

async function caseTypeControllerPing(req,res){
  try{
    res.json({message:'pong'})
  }catch(err){
    res.status(500).json({ message: err.message });
  }
} 

// GET  /api/case-type/:caseTypeId
async function getCaseType(req, res) {
  const { caseTypeId } = req.params;
  try {
    const ct = await caseTypeService.fetchCaseType(caseTypeId);
    if (!ct) return res.status(404).json({ message: `Not found: ${caseTypeId}` });
    res.json(ct);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
}

// POST /api/case-type
async function createCaseType(req, res) {
  try {
    const body = req.body || {};
    const label = body.caseType?.label?.trim() || 'New Case Type';
    const id = body.caseType?.id?.trim() || slugify(label);
    const stages =
      Array.isArray(body.stages) && body.stages.length
        ? body.stages
        : [
            {
              id: 'stage1',
              label: 'Stage 1',
              steps: [
                { id: 'step1', label: 'Step 1', status: 'pending', view: 'summary' }
              ]
            }
          ];

    const newCT = await caseTypeService.createCaseType({ caseType: { id, label }, stages });
    console.log(`initiated case type creation\nCase type id: ${id}\nClass name: ${label}\n`)
    res.status(201).json(newCT);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
}

// PUT  /api/case-type/:caseTypeId
async function updateCaseType(req, res) {
  try {
    const updated = await caseTypeService.updateCaseType(req.params.caseTypeId, req.body);
    res.json(updated);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
}

// DELETE /api/case-type/:caseTypeId
async function deleteCaseType(req, res) {
  try {
    await caseTypeService.deleteCaseType(req.params.caseTypeId);
    res.json({ message: 'Deleted' });
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
}

module.exports = {
  getCaseTypes,
  getCaseType,
  createCaseType,
  updateCaseType,
  deleteCaseType,
  caseTypeControllerPing
};
